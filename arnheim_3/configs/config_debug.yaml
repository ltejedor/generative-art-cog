---
# Render methods
# opacity patches overlay each other using a combination of alpha and depth,
# transparency _adds_ patch colours (black therefore appearing transparent),
# and masked transparency blends patches using the alpha channel.
render_method: "masked_transparency_clipped"
num_patches: 10
# Colour transformations can be: "none", "RGB space", "HSV space"
colour_transformations: "RGB space"
high_res_multiplier: 32
max_block_size_high_res: 4000

# Number of training steps
optim_steps: 1
learning_rate: 0.1

### Load segmented patches
patch_set: "animals.npy"

### Resize image patches to low- and high-res.
fixed_scale_patches: True
fixed_scale_coeff: 1.0

### Affine transform settings
# Translation bounds for X and Y.
min_trans: -0.7
max_trans: 0.7

# Configure a background, e.g. uploaded picture or solid colour.
background_url: ""
# Background usage: Global: use image across whole image; Local: reuse same image for every tile
background_use: "Local"
# Colour configuration for solid colour background
background_red: 100
background_green: 0
background_blue: 100

# Enter a global description of the image, e.g. 'a photorealistic chicken'
global_prompt: "a photorealistic chicken"
global_tile_prompt: False
tile_images: False
tiles_wide: 2
tiles_high: 3
compositional_image: True

# Single image (i.e. no tiling) composition prompts
# Specify 3x3 prompts for each composition region (left to right, starting at the top)
prompt_x0_y0: "a photorealistic sky with sun"
prompt_x1_y0: "a photorealistic sky"
prompt_x2_y0: "a photorealistic sky with moon"
prompt_x0_y1: "a photorealistic tree"
prompt_x1_y1: "a photorealistic tree"
prompt_x2_y1: "a photorealistic tree"
prompt_x0_y2: "a photorealistic field"
prompt_x1_y2: "a photorealistic field"
prompt_x2_y2: "a photorealistic chicken"

